unit Command.GenerateProxy;

interface

uses
  System.Classes, System.SysUtils,
  Data.DB,
  FireDAC.Comp.Client,
  Comp.Generator.DataSetCode,
  Comp.Generator.ProxyCode;

type
  TProxyGeneratorCommand = class(TComponent)
  const
    BaseProxyName = '{ObjectName}';
  private
    fCode: TStringList;
    fProxyGenerator: TProxyCodeGenerator;
    fDataSetGenerator: TDSGenerator;
  public
    constructor Create(AOwner: TComponent); override;
    destructor Destroy; override;
    function Execute(dataset: TDataSet): String;
  end;

implementation

uses
  App.AppInfo;

type
  TStringListHelper = class helper for TStringList
    procedure LineReplace(const LineToReplace, NewLine: string);
  end;

  { TStringListHelper }

procedure TStringListHelper.LineReplace(const LineToReplace, NewLine: string);
begin
  Self.Text := StringReplace(Self.Text, LineToReplace, NewLine, [rfReplaceAll]);
end;

{ TProxyGeneratorCommand }

constructor TProxyGeneratorCommand.Create(AOwner: TComponent);
begin
  inherited;
  fCode := TStringList.Create;
  fProxyGenerator := TProxyCodeGenerator.Create(Self);
  fDataSetGenerator := TDSGenerator.Create(Self);
end;

destructor TProxyGeneratorCommand.Destroy;
begin
  fCode.Free;
  inherited;
end;

function TProxyGeneratorCommand.Execute(dataset: TDataSet): String;
begin
  fProxyGenerator.dataset := dataset;
  fProxyGenerator.Execute;
  fCode.Clear;
  with fCode do
  begin
    Add('// Generated by ' + TAppInfo.AppName + ' at ' +
      FormatDateTime('yyyy-mm-dd hh:nn', Now));
    Add('unit proxy.{ObjectName};');
    Add('');
    AddStrings(fProxyGenerator.Code);
  end;
  with fDataSetGenerator do
  begin
    GeneratorMode := genAll;
    AppendMode := amMultilineAppends;
    DataSetType := dstFDMemTable;
    dataset := dataset;
    IndentationText := '  ';
  end;
  fDataSetGenerator.Execute;
  with fCode do
  begin
    LineReplace('  public', '  public' + sLineBreak +
      '    class function CreateMockTable (AOwner: TComponent): TFDMemTable;');
    Add('');
    Add('// -----------------------------------------------------------');
    Add('');
    Add('class function T{ObjectName}Proxy.CreateMockTable (AOwner: TComponent): TFDMemTable;');
    Add('var');
    Add('  ds: TFDMemTable;');
    Add('begin');
    AddStrings(fDataSetGenerator.Code);
    Add('  Result := ds;');
    Add('end;');
    Add('');
    Add('end.');
  end;
  Result := fCode.Text;
end;

end.
